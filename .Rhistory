setwd("~/Data Science/nws-stormanalysis")
source('nws.R')
top5_injuries <- arrange(summary, desc(FATALITIES), desc(INJURIES))[1:5, ]
top5_injuries
nws_injuries <- subset(nws, EVTYPE %in% top5_injuries)
nws_injuries
nws_injuries <- subset(nws, EVTYPE %in% top5_injuries$EVTYPE)
nws_injuries
?as.Date
nws$BGN_DATE[1]
as.character(nws$BGN_DATE[1])
grep("0:", as.character(nws$BGN_DATE[1]))
grep("0:0", as.character(nws$BGN_DATE[1]))
strsplit(as.character(nws$BGN_DATE[1]))
strsplit(as.character(nws$BGN_DATE[1]), " ")
strsplit(as.character(nws$BGN_DATE[1]), " ")[1]
strsplit(as.character(nws$BGN_DATE[1]), " ")[[1]][1]
dates <- strsplit(as.character(nws$BGN_DATE), " ")[[1]][1]
head(dates)
dates <- strsplit(as.character(nws$BGN_DATE), " ")
head(dates)
sapply(dates, function(x) return(x[1]))
head(Dates)
dates <- sapply(dates, function(x) return(x[1]))
head(dates)
source('nws.R')
nws_injuries
?as.POSIXct
as.POSIXct()
as.POSIXct(nws$BGN_TIME[1])
strptime("0100", "%H%M")
class(strptime("0100", "%H%M"))
?strptime
ndates <- paste(dates, nws$BGN_TIME)
head(ndates)
dates <- paste(dates, nws$BGN_TIME)
head(dates)
ndates <- strptime(dates, "%m/%d/%Y %H%M")
head(ndates)
dates <- as.POSIXct(strptime(dates, "%m/%d/%Y %H%M"))
head(dates)
length(dates)
source('nws.R')
nws_injuries
dates <- strsplit(as.character(nws_injuries$BGN_DATE), " ")
dates <- sapply(dates, function(x) return(x[1]))
dates <- paste(dates, nws_injuries$BGN_TIME)
nws_injuries$dates <- as.POSIXct(strptime(dates, "%m/%d/%Y %H%M"))
head(nws_injuries$dates)
nws_injuries
nws_injuries$dates
select(nws_injuries, BGN_DATE, BGN_TIME, dates)
source('nws.R')
strptime("CST", "%z")
strptime("CST", "%tz")
source('nws.R')
unique(nws$TIME_ZONE)
dates <- strsplit(as.character(nws$BGN_DATE), " ")
dates <- sapply(dates, function(x) return(x[1]))
dates <- paste(dates, nws$BGN_TIME)
source('nws.R')
dates
?strptime
head(strptime(dates, "%m/%d/%Y %H%M"))
sapply(dates, strptime, "%m/%d/%Y %H%M", tz = nws$TIME_ZONE)
sapply(dates, function(x) {tz = nws$TIME_ZONE[which(dates == x)]; strptime(x, "%m/%d/%Y %H%M", tz)})
sapply(dates, function(x) {tz = nws$TIME_ZONE[which(dates == x)]; strptime(x, "%m/%d/%Y %H%M", tz = tz)})
z = dates[1]
z
nws$TIME_ZONE[which(dates == x)]
nws$TIME_ZONE[which(dates == z)]
sapply(dates, function(x) {tz = as.character(nws$TIME_ZONE[which(dates == x)]); strptime(x, "%m/%d/%Y %H%M", tz = tz)})
source('nws.R')
nws_injuries <- group_by(nws_injuries, date)
nws_injuries <- group_by(nws_injuries, dates)
summarize(nws_injuries, disasters = n(EVTYPE))
summarize(nws_injuries, disasters = dplyr::n(EVTYPE))
summary <- summarize(nws_injuries, FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES))
arrange(summary, desc(FATALITIES), desc(INJURIES))
sum(is.na(dates))
sum(is.na(nws$dates))
source('nws.R')
source('nws.R')
source('nws.R')
TOP5
top6
top5
library(tidyr)
reshape2::melt(top5, c("EVTYPE"))
source('nws.R')
source('nws.R')
source('nws.R')
names(nws)
nws
nws%F
nws%f
nws$F
nws$MAG
nws$PROPDMG
names(nws)
head(nws$CROPDMG)
head(nws$CROPDMGEXP)
head(as.character(nws$CROPDMGEXP))
table(as.character(nws$CROPDMGEXP))
propertydmg <- numeric(nrow(nws))
length(propertydmg)
head(propertydmg)
for (i in 1:length(propertydmg)) {
exp <- as.character(nws$PROPDMGEXP[i])
damage <- nws$PROPDMG
if (exp == "b" | exp == "B") {damage <- damage * 10 ^ 9}
if (exp == "m" | exp == "M") {damage <- damage * 10 ^ 6}
if (exp == "k" | exp == "K") {damage <- damage * 10 ^ 3}
propertydmg[i] <- damage
}
for (i in 1:length(propertydmg)) {
exp <- as.character(nws$PROPDMGEXP[i])
damage <- nws$PROPDMG[i]
if (exp == "k" | exp == "K") {damage <- damage * 10 ^ 3}
if (exp == "m" | exp == "M") {damage <- damage * 10 ^ 6}
if (exp == "b" | exp == "B") {damage <- damage * 10 ^ 9}
propertydmg[i] <- damage
}
head(propertydmg)
select(nws, PROPDMG, PROPDMGEXP)
exp <- as.character(nws$PROPDMGEXP[i])
i
select(nws, PROPDMG, PROPDMGEXP)[i]
select(nws, PROPDMG, PROPDMGEXP)[i, ]
for (i in 1:length(propertydmg)) {
exp <- as.character(nws$PROPDMGEXP[i])
damage <- nws$PROPDMG[i]
if (is.na(exp)) {propertydmg <- damage; next}
if (exp == "k" | exp == "K") {damage <- damage * 10 ^ 3}
if (exp == "m" | exp == "M") {damage <- damage * 10 ^ 6}
if (exp == "b" | exp == "B") {damage <- damage * 10 ^ 9}
propertydmg[i] <- damage
}
head(propertydmg)
i
for (i in 1:length(propertydmg)) {
exp <- as.character(nws$PROPDMGEXP[i])
damage <- nws$PROPDMG[i]
if (is.na(exp)) {propertydmg[i] <- damage; next}
if (exp == "k" | exp == "K") {damage <- damage * 10 ^ 3}
if (exp == "m" | exp == "M") {damage <- damage * 10 ^ 6}
if (exp == "b" | exp == "B") {damage <- damage * 10 ^ 9}
propertydmg[i] <- damage
}
head(propertydmg)
i
exp <- as.character(nws$PROPDMGEXP[i])
damage <- nws$PROPDMG[i]
exp
damage
is.na(exp)
if (exp == "k" | exp == "K") {damage <- damage * 10 ^ 3}
damage
for (i in 1:length(propertydmg)) {
+ exp <- as.character(nws$PROPDMGEXP[i])
+ damage <- nws$PROPDMG[i]
+ if (is.na(exp)) {propertydmg[i] <- damage; next}
+ if (exp == "k" | exp == "K") {damage <- damage * 10 ^ 3}
+ if (exp == "m" | exp == "M") {damage <- damage * 10 ^ 6}
+ if (exp == "b" | exp == "B") {damage <- damage * 10 ^ 9}
+ propertydmg[i] <- damage
+ }
for (i in 1:length(propertydmg)) {
exp <- as.character(nws$PROPDMGEXP[i])
damage <- nws$PROPDMG[i]
if (is.na(exp)) {propertydmg[i] <- damage; next}
if (exp == "k" | exp == "K") {damage <- damage * 10 ^ 3}
if (exp == "m" | exp == "M") {damage <- damage * 10 ^ 6}
if (exp == "b" | exp == "B") {damage <- damage * 10 ^ 9}
propertydmg[i] <- damage
}
for (i in 1:length(propertydmg)) {
exp <- as.character(nws$PROPDMGEXP[i])
damage <- nws$PROPDMG[i]
if (is.na(exp)) {propertydmg[i] <- damage; next}
if (exp == "k" | exp == "K") {damage <- damage * 10 ^ 3}
if (exp == "m" | exp == "M") {damage <- damage * 10 ^ 6}
if (exp == "b" | exp == "B") {damage <- damage * 10 ^ 9}
propertydmg[i] <- damage
}
for (i in 1:length(propertydmg)) {
exp <- as.character(nws$PROPDMGEXP[i])
damage <- nws$PROPDMG[i]
if (is.na(exp)) {propertydmg[i] <- damage; next}
if (exp == "k" | exp == "K") {damage <- damage * 10 ^ 3}
if (exp == "m" | exp == "M") {damage <- damage * 10 ^ 6}
if (exp == "b" | exp == "B") {damage <- damage * 10 ^ 9}
propertydmg[i] <- damage
}
propertydmg <- numeric(nrow(nws))
for (i in 1:length(propertydmg)) {
exp <- as.character(nws$PROPDMGEXP[i])
damage <- nws$PROPDMG[i]
if (is.na(exp)) {propertydmg[i] <- damage; next}
if (exp == "k" | exp == "K") {damage <- damage * 10 ^ 3}
if (exp == "m" | exp == "M") {damage <- damage * 10 ^ 6}
if (exp == "b" | exp == "B") {damage <- damage * 10 ^ 9}
propertydmg[i] <- damage
}
head(propertydmg)
sort(propertydmg)
head(sort(propertydmg, decreasing = TRUE))
nws$propertydmg <- propertydmg
source("nws.Rmd")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
source("nws.R")
